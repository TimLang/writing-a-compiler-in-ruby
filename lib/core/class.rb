
def __new_class_object(size)
  ob = malloc(size)
  i = 1
  %s(printf "class object: %p (%d bytes)\n" ob size)
  %s(while (lt i size) (do
       (assign (index ob i) __method_missing)
       (assign i (add i 1))
  ))
  %s(assign (index ob 0) Class)
  return ob
end

class Class

  def new
    # @instance_size is generated by the compiler. YES, it is meant to be
    # an instance var, not a class var
    ob = malloc(@instance_size*4) 
    %s(assign (index ob 0) self)
    ob
  end
end

